//@version=6
indicator('Symbol Info', overlay = true)

//#region[FUNCTIONS]
// Box Location Helper
boxLoc(_loc) =>
    loc = switch _loc
        'Top-Left' => position.top_left
        'Top-Center' => position.top_center
        'Top-Right' => position.top_right
        'Middle-Left' => position.middle_left
        'Middle-Center' => position.middle_center
        'Middle-Right' => position.middle_right
        'Bottom-Left' => position.bottom_left
        'Bottom-Center' => position.bottom_center
        'Bottom-Right' => position.bottom_right
    loc

// 倒计时函数，增加负数检测
countdown(tf) =>
    til_next = time_close(tf) / 1000 - timenow / 1000
    if til_next > 0
        next_min = math.floor(til_next / 60)
        next_sec = til_next - next_min * 60
        str.tostring(next_min, '00') + ':' + str.tostring(next_sec, '00')
    else
        ""

// 纽约时间函数（手动修正夏令时）
nyc_clock_fixed() =>
    utc_hour = hour(timenow)  // 当前UTC小时
    utc_min = minute(timenow)
    utc_sec = second(timenow)
    
    // 判断是否为夏令时期间 (3月第二个星期日到11月第一个星期日)
    is_dst = (month(timenow) > 3 and month(timenow) < 11) or
      (month(timenow) == 3 and dayofweek(timenow) >= 7 and dayofmonth(timenow) >= 8) or
      (month(timenow) == 11 and dayofweek(timenow) <= 7 and dayofmonth(timenow) <= 7)
    
    offset = is_dst ? -4 : -5  // 夏令时UTC-4，否则UTC-5
    
    ny_hour = (utc_hour +1 + 24) % 24  // 防止小时负数，+24后取余
    hour_str = str.tostring(ny_hour, '00')
    min_str = str.tostring(utc_min, '00')
    sec_str = str.tostring(utc_sec, '00')
    hour_str + ':' + min_str

// 强制刷新机制，调用BTC/ETH，确保秒级刷新
plot(request.security('COINBASE:BTCUSD', '1', close), display = display.none)

//#endregion

//#region[INPUTS]
// SYMBOL INFO
_showInfo = input.bool(true, title = 'Show?', inline = 's2.1', group = 'Symbol Info')
_color2 = input.color(#000000, title = '', inline = 's2.1', group = 'Symbol Info')
_bgcolor2 = input.color(#fcfcfc, title = '', inline = 's2.1', group = 'Symbol Info')
_showBrdr2 = input.bool(false, title = 'Hide Border?', inline = 's2.1', group = 'Symbol Info')
_y2 = input.string('Top', title = '', inline = 's2.2', group = 'Symbol Info', options = ['Top', 'Middle', 'Bottom'])
_x2 = input.string('Right', title = '', inline = 's2.2', group = 'Symbol Info', options = ['Left', 'Center', 'Right'])
_size2 = input.string('Small', title = '', inline = 's2.2', group = 'Symbol Info', options = ['Tiny', 'Small', 'Normal', 'Large', 'Huge'])
_showIsym = input.bool(true, title = 'Symbol?', inline = 's2.3', group = 'Symbol Info')
_showIdate = input.bool(false, title = 'Date?', inline = 's2.3', group = 'Symbol Info')
_showCountdown = input.bool(true, title = 'Countdown?', inline = 's2.3', group = 'Symbol Info')
_showNYCtime = input.bool(true, title = 'Show NYC Time?', inline = 's2.3', group = 'Symbol Info')  // 新增纽约时间选项
//#endregion

//#region[LOGIC]
// Table Location
infoLOC = boxLoc(_y2 + '-' + _x2)

// Get Current Date
date = str.tostring(year(time_close)) + "/" + (month(time_close) < 10 ? "0" : "") + str.tostring(month(time_close)) + "/" + (dayofmonth(time_close) < 10 ? "0" : "") + str.tostring(dayofmonth(time_close))

// Get Current Timeframe
num_tf = if timeframe.isminutes
    if str.tonumber(timeframe.period) % 60 == 0
        str.tostring(str.tonumber(timeframe.period) / 60)
    else
        timeframe.period
else
    timeframe.period

text_tf = if timeframe.isminutes
    if str.tonumber(timeframe.period) % 60 == 0
        'H'
    else
        'm'
else
    na

tf = num_tf + text_tf

// 当前时间框架倒计时
countdown_tf = countdown(timeframe.period)

// 纽约时间
nyc_time_fixed = nyc_clock_fixed()
//#endregion 

//#region[PLOT]
// Symbol Info Display
if _showInfo
    cols = 1 + (_showCountdown ? 1 : 0) + (_showIdate ? 1 : 0)
    _info = table.new(infoLOC, 1, cols, frame_color = _color2, frame_width = _showBrdr2 ? 0 : 1, border_width = 1, border_color = color.black)
    colIndex = 0
    if _showIsym
        table.cell(_info, 0, colIndex, syminfo.root+ '  ' + tf, text_color = _color2, text_halign = 'center', text_size = 11, bgcolor = _bgcolor2, text_formatting = text.format_bold)
        colIndex += 1
    if _showCountdown
        countdown_value = countdown(timeframe.period)
        if countdown_value != ""
            table.cell(_info, 0, colIndex, countdown_value, text_color = _color2, text_halign = 'center', text_size = 14, bgcolor = _bgcolor2, text_font_family = font.family_monospace, text_formatting = text.format_bold)
        colIndex += 1
    if _showIdate
        table.cell(_info, 0, colIndex, date, text_color = _color2, text_halign = 'center', text_size = 11, bgcolor = _bgcolor2, text_font_family = font.family_monospace, text_formatting = text.format_bold)
//#endregion
